Construct basis for Optimum Programming Language:
    Object Orientation
      Type inference
      Variable variable types
    Functionality
      Lazy
      Compositional Functions
      Global and Local
      Lambdas
      Blocs
    Self-Changing Code
      Edit a copy of code to create genetically spliced optimum.
    Immediate Libraries
      Web-libraries (using Haskell or Python)
      Audio libraries (using the open-source Maximilian library which is starred)
      Web-app libraries (using GO and Dart)
      High-end Graphics libraries (using Halide, which is all in C++)
    Misc
      Maps, dictionaries, monads, zips, tuple-dictionaries, infinite lists, file IO, constant copies
      Comprehensive view on IDE, vectors and vector notation, complex numbers, customized mutable objects
      Constant copy derivations, assertions, try/catch case statements.
